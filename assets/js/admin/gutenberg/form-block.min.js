/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
/*!*************************************************!*\
  !*** ./assets/js/admin/gutenberg/form-block.js ***!
  \*************************************************/
/**
 * Everest Forms Form Block
 *
 * A block for embedding a Everest Forms into a post/page.
 */

/* global evf_form_block_data, wp */

var __ = wp.i18n.__;
var createElement = wp.element.createElement;
var registerBlockType = wp.blocks.registerBlockType;
var InspectorControls = wp.blockEditor.InspectorControls;
var _wp = wp,
    ServerSideRender = _wp.serverSideRender;
var _wp$components = wp.components,
    PanelBody = _wp$components.PanelBody,
    SelectControl = _wp$components.SelectControl,
    ToggleControl = _wp$components.ToggleControl,
    Placeholder = _wp$components.Placeholder;

window.testEVF = function () {
  setTimeout(function () {
    window.initializeForm();
  }, 10);
};

var EverestFormIcon = createElement('svg', {
  width: 24,
  height: 24,
  viewBox: '0 0 24 24'
}, createElement('path', {
  fill: 'currentColor',
  d: 'M18.1 4h-3.8l1.2 2h3.9zM20.6 8h-3.9l1.2 2h3.9zM20.6 18H5.8L12 7.9l2.5 4.1H12l-1.2 2h7.3L12 4.1 2.2 20h19.6z'
}));
registerBlockType('everest-forms/form-selector', {
  title: evf_form_block_data.i18n.title,
  icon: EverestFormIcon,
  category: 'widgets',
  keywords: evf_form_block_data.i18n.form_keywords,
  description: evf_form_block_data.i18n.description,
  attributes: {
    formId: {
      type: 'string'
    },
    displayTitle: {
      type: 'boolean'
    },
    displayDescription: {
      type: 'boolean'
    }
  },
  edit: function edit(props) {
    var _props$attributes = props.attributes,
        _props$attributes$for = _props$attributes.formId,
        formId = _props$attributes$for === void 0 ? '' : _props$attributes$for,
        _props$attributes$dis = _props$attributes.displayTitle,
        displayTitle = _props$attributes$dis === void 0 ? false : _props$attributes$dis,
        _props$attributes$dis2 = _props$attributes.displayDescription,
        displayDescription = _props$attributes$dis2 === void 0 ? false : _props$attributes$dis2,
        setAttributes = props.setAttributes;
    var formOptions = evf_form_block_data.forms.map(function (value) {
      return {
        value: value.ID,
        label: value.post_title
      };
    });
    var jsx;
    formOptions.unshift({
      value: '',
      label: evf_form_block_data.i18n.form_select
    });

    function selectForm(value) {
      setAttributes({
        formId: value
      });
    }

    function toggleDisplayTitle(value) {
      setAttributes({
        displayTitle: value
      });
    }

    function toggleDisplayDescription(value) {
      setAttributes({
        displayDescription: value
      });
    }

    jsx = [createElement(InspectorControls, {
      key: "evf-gutenberg-form-selector-inspector-controls"
    }, createElement(PanelBody, {
      title: evf_form_block_data.i18n.form_settings
    }, createElement(SelectControl, {
      label: evf_form_block_data.i18n.form_selected,
      value: formId,
      options: formOptions,
      onChange: selectForm
    }), createElement(ToggleControl, {
      label: evf_form_block_data.i18n.show_title,
      checked: displayTitle,
      onChange: toggleDisplayTitle
    }), createElement(ToggleControl, {
      label: evf_form_block_data.i18n.show_description,
      checked: displayDescription,
      onChange: toggleDisplayDescription
    })))];

    if (formId) {
      jsx.push(createElement(ServerSideRender, {
        key: "evf-gutenberg-form-selector-server-side-renderer",
        block: "everest-forms/form-selector",
        attributes: props.attributes
      }));
    } else {
      jsx.push(createElement(Placeholder, {
        key: "evf-gutenberg-form-selector-wrap",
        icon: EverestFormIcon,
        instructions: evf_form_block_data.i18n.title,
        className: "everest-form-gutenberg-form-selector-wrap"
      }, createElement(SelectControl, {
        key: "evf-gutenberg-form-selector-select-control",
        value: formId,
        options: formOptions,
        onChange: selectForm
      })));
    }

    return jsx;
  },
  save: function save() {
    return null;
  }
});
var __webpack_export_target__ = this;
for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ })()
;
//# sourceMappingURL=form-block.min.js.map